package com.jtouzy.cvapi.dao;

import java.lang.reflect.Field;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

import com.google.common.collect.BiMap;
import com.google.common.collect.HashBiMap;
import com.jtouzy.cvapi.Logger;

public class TableContext {
	private BiMap<Field,String> fieldsMapping = HashBiMap.create();
	private Map<Field,Boolean> idFields = new HashMap<Field,Boolean>();
	private String tableName;
	
	public TableContext(String tableName) {
		this.tableName = tableName;
	}
	
	public void putField(Field field, String fieldName) {
		Logger.log("Enregistrement du champ " + field.getName() + " avec la définition " + fieldName);
		fieldsMapping.put(field, fieldName);
	}
	
	public void putIDField(Field field, boolean autoGenerated) {
		Logger.log("Définition du champ unique " + field.getName() + " avec la définition " + fieldsMapping.get(field));
		idFields.put(field, autoGenerated);
	}
	
	public List<String> getIDColumns() {
		return idFields.keySet().stream()
				       			.map(f -> fieldsMapping.get(f))
				       			.collect(Collectors.toList());
	}
	
	public Field getFieldForProperty(String property) {
		return fieldsMapping.inverse().get(property);
	}

	public String getTableName() {
		return tableName;
	}
}
